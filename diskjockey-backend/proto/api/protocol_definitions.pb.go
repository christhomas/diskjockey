// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: diskjockey-backend/proto/protocol_definitions.proto

// Socket protocol message type IDs used in custom framing (not part of protobuf):
//   2: ReadFileRequest / ReadFileResponse
//   3: WriteFileRequest / WriteFileResponse
// These IDs are used in the daemon's socket protocol to identify message types.

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Central enum for all message type IDs used in the socket protocol
type MessageType int32

const (
	MessageType_UNKNOWN_TYPE                 MessageType = 0
	MessageType_CONNECT                      MessageType = 1
	MessageType_LIST_DIR_REQUEST             MessageType = 2
	MessageType_LIST_DIR_RESPONSE            MessageType = 3
	MessageType_MOUNT_REQUEST                MessageType = 4
	MessageType_MOUNT_RESPONSE               MessageType = 5
	MessageType_UNMOUNT_REQUEST              MessageType = 6
	MessageType_UNMOUNT_RESPONSE             MessageType = 7
	MessageType_CREATE_MOUNT_REQUEST         MessageType = 8
	MessageType_CREATE_MOUNT_RESPONSE        MessageType = 9
	MessageType_DELETE_MOUNT_REQUEST         MessageType = 10
	MessageType_DELETE_MOUNT_RESPONSE        MessageType = 11
	MessageType_LIST_MOUNTS_REQUEST          MessageType = 12
	MessageType_LIST_MOUNTS_RESPONSE         MessageType = 13
	MessageType_LIST_DISK_TYPES_REQUEST      MessageType = 14
	MessageType_LIST_DISK_TYPES_RESPONSE     MessageType = 15
	MessageType_MOUNT_STATUS_UPDATE_REQUEST  MessageType = 16
	MessageType_MOUNT_STATUS_UPDATE_RESPONSE MessageType = 17
	MessageType_READ_FILE_REQUEST            MessageType = 18
	MessageType_READ_FILE_RESPONSE           MessageType = 19
	MessageType_WRITE_FILE_REQUEST           MessageType = 20
	MessageType_WRITE_FILE_RESPONSE          MessageType = 21
	MessageType_STAT_REQUEST                 MessageType = 22
	MessageType_STAT_RESPONSE                MessageType = 23
	MessageType_DELETE_FILE_REQUEST          MessageType = 24
	MessageType_DELETE_FILE_RESPONSE         MessageType = 25
	MessageType_SHUTDOWN_REQUEST             MessageType = 99
	MessageType_SHUTDOWN_RESPONSE            MessageType = 100
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:   "UNKNOWN_TYPE",
		1:   "CONNECT",
		2:   "LIST_DIR_REQUEST",
		3:   "LIST_DIR_RESPONSE",
		4:   "MOUNT_REQUEST",
		5:   "MOUNT_RESPONSE",
		6:   "UNMOUNT_REQUEST",
		7:   "UNMOUNT_RESPONSE",
		8:   "CREATE_MOUNT_REQUEST",
		9:   "CREATE_MOUNT_RESPONSE",
		10:  "DELETE_MOUNT_REQUEST",
		11:  "DELETE_MOUNT_RESPONSE",
		12:  "LIST_MOUNTS_REQUEST",
		13:  "LIST_MOUNTS_RESPONSE",
		14:  "LIST_DISK_TYPES_REQUEST",
		15:  "LIST_DISK_TYPES_RESPONSE",
		16:  "MOUNT_STATUS_UPDATE_REQUEST",
		17:  "MOUNT_STATUS_UPDATE_RESPONSE",
		18:  "READ_FILE_REQUEST",
		19:  "READ_FILE_RESPONSE",
		20:  "WRITE_FILE_REQUEST",
		21:  "WRITE_FILE_RESPONSE",
		22:  "STAT_REQUEST",
		23:  "STAT_RESPONSE",
		24:  "DELETE_FILE_REQUEST",
		25:  "DELETE_FILE_RESPONSE",
		99:  "SHUTDOWN_REQUEST",
		100: "SHUTDOWN_RESPONSE",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN_TYPE":                 0,
		"CONNECT":                      1,
		"LIST_DIR_REQUEST":             2,
		"LIST_DIR_RESPONSE":            3,
		"MOUNT_REQUEST":                4,
		"MOUNT_RESPONSE":               5,
		"UNMOUNT_REQUEST":              6,
		"UNMOUNT_RESPONSE":             7,
		"CREATE_MOUNT_REQUEST":         8,
		"CREATE_MOUNT_RESPONSE":        9,
		"DELETE_MOUNT_REQUEST":         10,
		"DELETE_MOUNT_RESPONSE":        11,
		"LIST_MOUNTS_REQUEST":          12,
		"LIST_MOUNTS_RESPONSE":         13,
		"LIST_DISK_TYPES_REQUEST":      14,
		"LIST_DISK_TYPES_RESPONSE":     15,
		"MOUNT_STATUS_UPDATE_REQUEST":  16,
		"MOUNT_STATUS_UPDATE_RESPONSE": 17,
		"READ_FILE_REQUEST":            18,
		"READ_FILE_RESPONSE":           19,
		"WRITE_FILE_REQUEST":           20,
		"WRITE_FILE_RESPONSE":          21,
		"STAT_REQUEST":                 22,
		"STAT_RESPONSE":                23,
		"DELETE_FILE_REQUEST":          24,
		"DELETE_FILE_RESPONSE":         25,
		"SHUTDOWN_REQUEST":             99,
		"SHUTDOWN_RESPONSE":            100,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{0}
}

// Mount status event (for event-driven updates)
type MountStatus int32

const (
	MountStatus_UNKNOWN   MountStatus = 0
	MountStatus_MOUNTED   MountStatus = 1
	MountStatus_UNMOUNTED MountStatus = 2
	MountStatus_ERROR     MountStatus = 3
)

// Enum value maps for MountStatus.
var (
	MountStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "MOUNTED",
		2: "UNMOUNTED",
		3: "ERROR",
	}
	MountStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"MOUNTED":   1,
		"UNMOUNTED": 2,
		"ERROR":     3,
	}
)

func (x MountStatus) Enum() *MountStatus {
	p := new(MountStatus)
	*p = x
	return p
}

func (x MountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes[1].Descriptor()
}

func (MountStatus) Type() protoreflect.EnumType {
	return &file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes[1]
}

func (x MountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MountStatus.Descriptor instead.
func (MountStatus) EnumDescriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{1}
}

type ConnectRequest_Role int32

const (
	ConnectRequest_UNKNOWN       ConnectRequest_Role = 0
	ConnectRequest_APP           ConnectRequest_Role = 1
	ConnectRequest_BACKEND       ConnectRequest_Role = 2
	ConnectRequest_FILE_PROVIDER ConnectRequest_Role = 3 // Add more as needed
)

// Enum value maps for ConnectRequest_Role.
var (
	ConnectRequest_Role_name = map[int32]string{
		0: "UNKNOWN",
		1: "APP",
		2: "BACKEND",
		3: "FILE_PROVIDER",
	}
	ConnectRequest_Role_value = map[string]int32{
		"UNKNOWN":       0,
		"APP":           1,
		"BACKEND":       2,
		"FILE_PROVIDER": 3,
	}
)

func (x ConnectRequest_Role) Enum() *ConnectRequest_Role {
	p := new(ConnectRequest_Role)
	*p = x
	return p
}

func (x ConnectRequest_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectRequest_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes[2].Descriptor()
}

func (ConnectRequest_Role) Type() protoreflect.EnumType {
	return &file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes[2]
}

func (x ConnectRequest_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectRequest_Role.Descriptor instead.
func (ConnectRequest_Role) EnumDescriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{9, 0}
}

// Message wrapper that contains the actual message and its type
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=api.MessageType" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"` // Serialized message data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNKNOWN_TYPE
}

func (x *Message) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Handshake
type HandshakeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Client        string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandshakeRequest) Reset() {
	*x = HandshakeRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeRequest) ProtoMessage() {}

func (x *HandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeRequest.ProtoReflect.Descriptor instead.
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{1}
}

func (x *HandshakeRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type HandshakeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        string                 `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandshakeResponse) Reset() {
	*x = HandshakeResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeResponse) ProtoMessage() {}

func (x *HandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeResponse.ProtoReflect.Descriptor instead.
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{2}
}

func (x *HandshakeResponse) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

// List Directory
type ListDirRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirRequest) Reset() {
	*x = ListDirRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirRequest) ProtoMessage() {}

func (x *ListDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirRequest.ProtoReflect.Descriptor instead.
func (*ListDirRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{3}
}

func (x *ListDirRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *ListDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListDirResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirResponse) Reset() {
	*x = ListDirResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirResponse) ProtoMessage() {}

func (x *ListDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirResponse.ProtoReflect.Descriptor instead.
func (*ListDirResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{4}
}

func (x *ListDirResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListDirResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Read File
type ReadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{5}
}

func (x *ReadFileRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *ReadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ReadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileResponse) Reset() {
	*x = ReadFileResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileResponse) ProtoMessage() {}

func (x *ReadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileResponse.ProtoReflect.Descriptor instead.
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{6}
}

func (x *ReadFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReadFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Write File
type WriteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileRequest) Reset() {
	*x = WriteFileRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileRequest) ProtoMessage() {}

func (x *WriteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileRequest.ProtoReflect.Descriptor instead.
func (*WriteFileRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{7}
}

func (x *WriteFileRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *WriteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileResponse) Reset() {
	*x = WriteFileResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileResponse) ProtoMessage() {}

func (x *WriteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileResponse.ProtoReflect.Descriptor instead.
func (*WriteFileResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{8}
}

func (x *WriteFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Helper → Backend: Initial handshake, sends helper's listening port
// Sent by any client to initiate a session with the helper
type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          ConnectRequest_Role    `protobuf:"varint,1,opt,name=role,proto3,enum=api.ConnectRequest_Role" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectRequest) GetRole() ConnectRequest_Role {
	if x != nil {
		return x.Role
	}
	return ConnectRequest_UNKNOWN
}

// Response to ConnectRequest
type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Add more fields as needed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{10}
}

func (x *ConnectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Delete File
type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteFileRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Stat (file metadata)
type StatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{13}
}

func (x *StatRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *StatRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *FileInfo              `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{14}
}

func (x *StatResponse) GetInfo() *FileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *StatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// List available disk types
type ListDiskTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskTypesRequest) Reset() {
	*x = ListDiskTypesRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskTypesRequest) ProtoMessage() {}

func (x *ListDiskTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskTypesRequest.ProtoReflect.Descriptor instead.
func (*ListDiskTypesRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{15}
}

type ListDiskTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiskTypes     []*DiskTypeInfo        `protobuf:"bytes,1,rep,name=disk_types,json=diskTypes,proto3" json:"disk_types,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskTypesResponse) Reset() {
	*x = ListDiskTypesResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskTypesResponse) ProtoMessage() {}

func (x *ListDiskTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskTypesResponse.ProtoReflect.Descriptor instead.
func (*ListDiskTypesResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{16}
}

func (x *ListDiskTypesResponse) GetDiskTypes() []*DiskTypeInfo {
	if x != nil {
		return x.DiskTypes
	}
	return nil
}

func (x *ListDiskTypesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DiskTypeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ConfigFields  []*ConfigField         `protobuf:"bytes,3,rep,name=config_fields,json=configFields,proto3" json:"config_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskTypeInfo) Reset() {
	*x = DiskTypeInfo{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskTypeInfo) ProtoMessage() {}

func (x *DiskTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskTypeInfo.ProtoReflect.Descriptor instead.
func (*DiskTypeInfo) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{17}
}

func (x *DiskTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskTypeInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiskTypeInfo) GetConfigFields() []*ConfigField {
	if x != nil {
		return x.ConfigFields
	}
	return nil
}

type ConfigField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Required      bool                   `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigField) Reset() {
	*x = ConfigField{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigField) ProtoMessage() {}

func (x *ConfigField) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigField.ProtoReflect.Descriptor instead.
func (*ConfigField) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConfigField) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConfigField) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

// List current mounts
type ListMountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMountsRequest) Reset() {
	*x = ListMountsRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMountsRequest) ProtoMessage() {}

func (x *ListMountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMountsRequest.ProtoReflect.Descriptor instead.
func (*ListMountsRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{19}
}

type ListMountsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mounts        []*MountInfo           `protobuf:"bytes,1,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMountsResponse) Reset() {
	*x = ListMountsResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMountsResponse) ProtoMessage() {}

func (x *ListMountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMountsResponse.ProtoReflect.Descriptor instead.
func (*ListMountsResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{20}
}

func (x *ListMountsResponse) GetMounts() []*MountInfo {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *ListMountsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MountInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DiskType      string                 `protobuf:"bytes,2,opt,name=disk_type,json=diskType,proto3" json:"disk_type,omitempty"`
	Config        map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MountId       uint32                 `protobuf:"varint,4,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountInfo) Reset() {
	*x = MountInfo{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountInfo) ProtoMessage() {}

func (x *MountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountInfo.ProtoReflect.Descriptor instead.
func (*MountInfo) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{21}
}

func (x *MountInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MountInfo) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

func (x *MountInfo) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *MountInfo) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

// File metadata
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	IsDir         bool                   `protobuf:"varint,3,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{22}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

// Mount/Unmount management
// --- Mount/Unmount now only activate/deactivate an existing mount by ID ---
type MountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"` // ID of mount to activate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountRequest) Reset() {
	*x = MountRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountRequest) ProtoMessage() {}

func (x *MountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountRequest.ProtoReflect.Descriptor instead.
func (*MountRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{23}
}

func (x *MountRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

type MountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountResponse) Reset() {
	*x = MountResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountResponse) ProtoMessage() {}

func (x *MountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountResponse.ProtoReflect.Descriptor instead.
func (*MountResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{24}
}

func (x *MountResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// --- Create/Delete are for DB row management ---
type CreateMountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DiskType      string                 `protobuf:"bytes,2,opt,name=disk_type,json=diskType,proto3" json:"disk_type,omitempty"`
	Config        map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMountRequest) Reset() {
	*x = CreateMountRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMountRequest) ProtoMessage() {}

func (x *CreateMountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMountRequest.ProtoReflect.Descriptor instead.
func (*CreateMountRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{25}
}

func (x *CreateMountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMountRequest) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

func (x *CreateMountRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateMountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMountResponse) Reset() {
	*x = CreateMountResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMountResponse) ProtoMessage() {}

func (x *CreateMountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMountResponse.ProtoReflect.Descriptor instead.
func (*CreateMountResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{26}
}

func (x *CreateMountResponse) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *CreateMountResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteMountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMountRequest) Reset() {
	*x = DeleteMountRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMountRequest) ProtoMessage() {}

func (x *DeleteMountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMountRequest.ProtoReflect.Descriptor instead.
func (*DeleteMountRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteMountRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

type DeleteMountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMountResponse) Reset() {
	*x = DeleteMountResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMountResponse) ProtoMessage() {}

func (x *DeleteMountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMountResponse.ProtoReflect.Descriptor instead.
func (*DeleteMountResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteMountResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnmountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmountRequest) Reset() {
	*x = UnmountRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmountRequest) ProtoMessage() {}

func (x *UnmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmountRequest.ProtoReflect.Descriptor instead.
func (*UnmountRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{29}
}

func (x *UnmountRequest) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

type UnmountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmountResponse) Reset() {
	*x = UnmountResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmountResponse) ProtoMessage() {}

func (x *UnmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmountResponse.ProtoReflect.Descriptor instead.
func (*UnmountResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{30}
}

func (x *UnmountResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Shutdown backend daemon
type ShutdownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{31}
}

type ShutdownResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{32}
}

func (x *ShutdownResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShutdownResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MountStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MountId       uint32                 `protobuf:"varint,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	Status        MountStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=api.MountStatus" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountStatusUpdate) Reset() {
	*x = MountStatusUpdate{}
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountStatusUpdate) ProtoMessage() {}

func (x *MountStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountStatusUpdate.ProtoReflect.Descriptor instead.
func (*MountStatusUpdate) Descriptor() ([]byte, []int) {
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP(), []int{33}
}

func (x *MountStatusUpdate) GetMountId() uint32 {
	if x != nil {
		return x.MountId
	}
	return 0
}

func (x *MountStatusUpdate) GetStatus() MountStatus {
	if x != nil {
		return x.Status
	}
	return MountStatus_UNKNOWN
}

func (x *MountStatusUpdate) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_diskjockey_backend_proto_protocol_definitions_proto protoreflect.FileDescriptor

const file_diskjockey_backend_proto_protocol_definitions_proto_rawDesc = "" +
	"\n" +
	"3diskjockey-backend/proto/protocol_definitions.proto\x12\x03api\"I\n" +
	"\aMessage\x12$\n" +
	"\x04type\x18\x01 \x01(\x0e2\x10.api.MessageTypeR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"*\n" +
	"\x10HandshakeRequest\x12\x16\n" +
	"\x06client\x18\x01 \x01(\tR\x06client\"+\n" +
	"\x11HandshakeResponse\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\"?\n" +
	"\x0eListDirRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"L\n" +
	"\x0fListDirResponse\x12#\n" +
	"\x05files\x18\x01 \x03(\v2\r.api.FileInfoR\x05files\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"@\n" +
	"\x0fReadFileRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"<\n" +
	"\x10ReadFileResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"U\n" +
	"\x10WriteFileRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\")\n" +
	"\x11WriteFileResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"|\n" +
	"\x0eConnectRequest\x12,\n" +
	"\x04role\x18\x01 \x01(\x0e2\x18.api.ConnectRequest.RoleR\x04role\"<\n" +
	"\x04Role\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\a\n" +
	"\x03APP\x10\x01\x12\v\n" +
	"\aBACKEND\x10\x02\x12\x11\n" +
	"\rFILE_PROVIDER\x10\x03\"'\n" +
	"\x0fConnectResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"B\n" +
	"\x11DeleteFileRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"*\n" +
	"\x12DeleteFileResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"<\n" +
	"\vStatRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"G\n" +
	"\fStatResponse\x12!\n" +
	"\x04info\x18\x01 \x01(\v2\r.api.FileInfoR\x04info\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x16\n" +
	"\x14ListDiskTypesRequest\"_\n" +
	"\x15ListDiskTypesResponse\x120\n" +
	"\n" +
	"disk_types\x18\x01 \x03(\v2\x11.api.DiskTypeInfoR\tdiskTypes\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"{\n" +
	"\fDiskTypeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x125\n" +
	"\rconfig_fields\x18\x03 \x03(\v2\x10.api.ConfigFieldR\fconfigFields\"s\n" +
	"\vConfigField\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\brequired\x18\x04 \x01(\bR\brequired\"\x13\n" +
	"\x11ListMountsRequest\"R\n" +
	"\x12ListMountsResponse\x12&\n" +
	"\x06mounts\x18\x01 \x03(\v2\x0e.api.MountInfoR\x06mounts\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xc6\x01\n" +
	"\tMountInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tdisk_type\x18\x02 \x01(\tR\bdiskType\x122\n" +
	"\x06config\x18\x03 \x03(\v2\x1a.api.MountInfo.ConfigEntryR\x06config\x12\x19\n" +
	"\bmount_id\x18\x04 \x01(\rR\amountId\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\bFileInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x15\n" +
	"\x06is_dir\x18\x03 \x01(\bR\x05isDir\")\n" +
	"\fMountRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\"%\n" +
	"\rMountResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"\xbd\x01\n" +
	"\x12CreateMountRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tdisk_type\x18\x02 \x01(\tR\bdiskType\x12;\n" +
	"\x06config\x18\x03 \x03(\v2#.api.CreateMountRequest.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x13CreateMountResponse\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"/\n" +
	"\x12DeleteMountRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\"+\n" +
	"\x13DeleteMountResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"+\n" +
	"\x0eUnmountRequest\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\"'\n" +
	"\x0fUnmountResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"\x11\n" +
	"\x0fShutdownRequest\"F\n" +
	"\x10ShutdownResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"n\n" +
	"\x11MountStatusUpdate\x12\x19\n" +
	"\bmount_id\x18\x01 \x01(\rR\amountId\x12(\n" +
	"\x06status\x18\x02 \x01(\x0e2\x10.api.MountStatusR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error*\xab\x05\n" +
	"\vMessageType\x12\x10\n" +
	"\fUNKNOWN_TYPE\x10\x00\x12\v\n" +
	"\aCONNECT\x10\x01\x12\x14\n" +
	"\x10LIST_DIR_REQUEST\x10\x02\x12\x15\n" +
	"\x11LIST_DIR_RESPONSE\x10\x03\x12\x11\n" +
	"\rMOUNT_REQUEST\x10\x04\x12\x12\n" +
	"\x0eMOUNT_RESPONSE\x10\x05\x12\x13\n" +
	"\x0fUNMOUNT_REQUEST\x10\x06\x12\x14\n" +
	"\x10UNMOUNT_RESPONSE\x10\a\x12\x18\n" +
	"\x14CREATE_MOUNT_REQUEST\x10\b\x12\x19\n" +
	"\x15CREATE_MOUNT_RESPONSE\x10\t\x12\x18\n" +
	"\x14DELETE_MOUNT_REQUEST\x10\n" +
	"\x12\x19\n" +
	"\x15DELETE_MOUNT_RESPONSE\x10\v\x12\x17\n" +
	"\x13LIST_MOUNTS_REQUEST\x10\f\x12\x18\n" +
	"\x14LIST_MOUNTS_RESPONSE\x10\r\x12\x1b\n" +
	"\x17LIST_DISK_TYPES_REQUEST\x10\x0e\x12\x1c\n" +
	"\x18LIST_DISK_TYPES_RESPONSE\x10\x0f\x12\x1f\n" +
	"\x1bMOUNT_STATUS_UPDATE_REQUEST\x10\x10\x12 \n" +
	"\x1cMOUNT_STATUS_UPDATE_RESPONSE\x10\x11\x12\x15\n" +
	"\x11READ_FILE_REQUEST\x10\x12\x12\x16\n" +
	"\x12READ_FILE_RESPONSE\x10\x13\x12\x16\n" +
	"\x12WRITE_FILE_REQUEST\x10\x14\x12\x17\n" +
	"\x13WRITE_FILE_RESPONSE\x10\x15\x12\x10\n" +
	"\fSTAT_REQUEST\x10\x16\x12\x11\n" +
	"\rSTAT_RESPONSE\x10\x17\x12\x17\n" +
	"\x13DELETE_FILE_REQUEST\x10\x18\x12\x18\n" +
	"\x14DELETE_FILE_RESPONSE\x10\x19\x12\x14\n" +
	"\x10SHUTDOWN_REQUEST\x10c\x12\x15\n" +
	"\x11SHUTDOWN_RESPONSE\x10d*A\n" +
	"\vMountStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aMOUNTED\x10\x01\x12\r\n" +
	"\tUNMOUNTED\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03B\"Z diskjockey-backend/proto/api;apib\x06proto3"

var (
	file_diskjockey_backend_proto_protocol_definitions_proto_rawDescOnce sync.Once
	file_diskjockey_backend_proto_protocol_definitions_proto_rawDescData []byte
)

func file_diskjockey_backend_proto_protocol_definitions_proto_rawDescGZIP() []byte {
	file_diskjockey_backend_proto_protocol_definitions_proto_rawDescOnce.Do(func() {
		file_diskjockey_backend_proto_protocol_definitions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_diskjockey_backend_proto_protocol_definitions_proto_rawDesc), len(file_diskjockey_backend_proto_protocol_definitions_proto_rawDesc)))
	})
	return file_diskjockey_backend_proto_protocol_definitions_proto_rawDescData
}

var file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_diskjockey_backend_proto_protocol_definitions_proto_goTypes = []any{
	(MessageType)(0),              // 0: api.MessageType
	(MountStatus)(0),              // 1: api.MountStatus
	(ConnectRequest_Role)(0),      // 2: api.ConnectRequest.Role
	(*Message)(nil),               // 3: api.Message
	(*HandshakeRequest)(nil),      // 4: api.HandshakeRequest
	(*HandshakeResponse)(nil),     // 5: api.HandshakeResponse
	(*ListDirRequest)(nil),        // 6: api.ListDirRequest
	(*ListDirResponse)(nil),       // 7: api.ListDirResponse
	(*ReadFileRequest)(nil),       // 8: api.ReadFileRequest
	(*ReadFileResponse)(nil),      // 9: api.ReadFileResponse
	(*WriteFileRequest)(nil),      // 10: api.WriteFileRequest
	(*WriteFileResponse)(nil),     // 11: api.WriteFileResponse
	(*ConnectRequest)(nil),        // 12: api.ConnectRequest
	(*ConnectResponse)(nil),       // 13: api.ConnectResponse
	(*DeleteFileRequest)(nil),     // 14: api.DeleteFileRequest
	(*DeleteFileResponse)(nil),    // 15: api.DeleteFileResponse
	(*StatRequest)(nil),           // 16: api.StatRequest
	(*StatResponse)(nil),          // 17: api.StatResponse
	(*ListDiskTypesRequest)(nil),  // 18: api.ListDiskTypesRequest
	(*ListDiskTypesResponse)(nil), // 19: api.ListDiskTypesResponse
	(*DiskTypeInfo)(nil),          // 20: api.DiskTypeInfo
	(*ConfigField)(nil),           // 21: api.ConfigField
	(*ListMountsRequest)(nil),     // 22: api.ListMountsRequest
	(*ListMountsResponse)(nil),    // 23: api.ListMountsResponse
	(*MountInfo)(nil),             // 24: api.MountInfo
	(*FileInfo)(nil),              // 25: api.FileInfo
	(*MountRequest)(nil),          // 26: api.MountRequest
	(*MountResponse)(nil),         // 27: api.MountResponse
	(*CreateMountRequest)(nil),    // 28: api.CreateMountRequest
	(*CreateMountResponse)(nil),   // 29: api.CreateMountResponse
	(*DeleteMountRequest)(nil),    // 30: api.DeleteMountRequest
	(*DeleteMountResponse)(nil),   // 31: api.DeleteMountResponse
	(*UnmountRequest)(nil),        // 32: api.UnmountRequest
	(*UnmountResponse)(nil),       // 33: api.UnmountResponse
	(*ShutdownRequest)(nil),       // 34: api.ShutdownRequest
	(*ShutdownResponse)(nil),      // 35: api.ShutdownResponse
	(*MountStatusUpdate)(nil),     // 36: api.MountStatusUpdate
	nil,                           // 37: api.MountInfo.ConfigEntry
	nil,                           // 38: api.CreateMountRequest.ConfigEntry
}
var file_diskjockey_backend_proto_protocol_definitions_proto_depIdxs = []int32{
	0,  // 0: api.Message.type:type_name -> api.MessageType
	25, // 1: api.ListDirResponse.files:type_name -> api.FileInfo
	2,  // 2: api.ConnectRequest.role:type_name -> api.ConnectRequest.Role
	25, // 3: api.StatResponse.info:type_name -> api.FileInfo
	20, // 4: api.ListDiskTypesResponse.disk_types:type_name -> api.DiskTypeInfo
	21, // 5: api.DiskTypeInfo.config_fields:type_name -> api.ConfigField
	24, // 6: api.ListMountsResponse.mounts:type_name -> api.MountInfo
	37, // 7: api.MountInfo.config:type_name -> api.MountInfo.ConfigEntry
	38, // 8: api.CreateMountRequest.config:type_name -> api.CreateMountRequest.ConfigEntry
	1,  // 9: api.MountStatusUpdate.status:type_name -> api.MountStatus
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_diskjockey_backend_proto_protocol_definitions_proto_init() }
func file_diskjockey_backend_proto_protocol_definitions_proto_init() {
	if File_diskjockey_backend_proto_protocol_definitions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_diskjockey_backend_proto_protocol_definitions_proto_rawDesc), len(file_diskjockey_backend_proto_protocol_definitions_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_diskjockey_backend_proto_protocol_definitions_proto_goTypes,
		DependencyIndexes: file_diskjockey_backend_proto_protocol_definitions_proto_depIdxs,
		EnumInfos:         file_diskjockey_backend_proto_protocol_definitions_proto_enumTypes,
		MessageInfos:      file_diskjockey_backend_proto_protocol_definitions_proto_msgTypes,
	}.Build()
	File_diskjockey_backend_proto_protocol_definitions_proto = out.File
	file_diskjockey_backend_proto_protocol_definitions_proto_goTypes = nil
	file_diskjockey_backend_proto_protocol_definitions_proto_depIdxs = nil
}
